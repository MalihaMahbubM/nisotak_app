events {
	worker_connections 1024;
}

http {

    # conf items from the nginx.conf & /sites-enabled/default files on the server - used before docker
    sendfile on;
    include /etc/nginx/mime.types;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    client_max_body_size 10M;
    gzip on;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;


	server {

	    listen [::]:443 ssl ipv6only=on; # managed by Certbot
	    listen 443 ssl; # managed by Certbot

	    root /usr/share/nginx/html;
	    index index.html index.htm index.nginx-debian.html;

	    ssl_certificate /etc/letsencrypt/live/nisotak.usask.ca/fullchain.pem; # managed by Certbot
	    ssl_certificate_key /etc/letsencrypt/live/nisotak.usask.ca/privkey.pem; # managed by Certbot

	    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot




		server_name nisotak.usask.ca

        	default_type application/octet-stream;

		location / {
			try_files $uri $uri/ /index.html;
		}

		location /textContentService {
			proxy_pass http://text_service:5004/textContentService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

		location /phraseService {
			proxy_pass http://phrase_service:5003/phraseService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

		location /contentPageService {
			proxy_pass http://content_page_service:5002/contentPageService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

		location /mcQuestionService {
			proxy_pass http://mcquestion_service:5005/mcQuestionService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

		location /lessonService {
			proxy_pass http://lessons_service:5001/lessonService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

		location /accessControlService {
			proxy_pass http://accesscontrol_service:5000/accessControlService;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;
		}

	
	}

	server {

		if ($host = nisotak.usask.ca) {
			return 301 https://$host$request_uri;
		}

		listen 80;
		listen [::]:80;
		server_name nisotak.usask.ca;

		return 404;
	}



	# Virtual Host configuration for example.com
	#
	# You can move that to a different file under sites-available/ and symlink that
	# to sites-enabled/ to enable it.
	#
	#server {
	#	listen 80;
	#	listen [::]:80;
	#
	#	server_name example.com;
	#
	#	root /var/www/example.com;
	#	index index.html;
	#
	#	location / {
	#		try_files $uri $uri/ =404;
	#	}
	#}

}
